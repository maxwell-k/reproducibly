# .github/workflows/nox.yaml
# Copyright 2023 Keith Maxwell
# SPDX-License-Identifier: CC0-1.0

on: # yamllint disable-line rule:truthy
  push: { branches: [main] }
  pull_request: { branches: [main] }
  schedule: [{ cron: "15 0 * * *" }]
  workflow_dispatch:
    inputs:
      repository-url:
        type: choice
        description: Upload API endpoint for PyPI
        options:
          # https://github.com/pypa/gh-action-pypi-publish/blob/unstable/v1/action.yml#L23
          - https://upload.pypi.org/legacy/
          - https://test.pypi.org/legacy/
        default: https://upload.pypi.org/legacy/

jobs:
  nox:
    runs-on: ubuntu-latest
    outputs: { version: "${{ steps.version.outputs.version }}" }
    steps:
      - run: sudo apt-get update && sudo apt-get --yes install meson
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6
        with: { python-version: "3.13" }
      - run: ./noxfile.py
      - run: git diff --exit-code dist/SHA256SUMS
      - id: version
        shell: python
        run: |
          #!/usr/bin/env python3
          """Write the version number to GITHUB_OUTPUT."""

          from os import environ
          from pathlib import Path

          START = '__version__ = "'
          END = '"'
          OUTPUT = Path(environ.get("GITHUB_OUTPUT", "github_output.txt"))


          for line in Path("reproducibly.py").read_text().splitlines():
              if line.startswith(START) and line.endswith(END):
                  break
          else:
              msg = "Line not found."
              raise ValueError(msg)

          msg = "version=" + line.removeprefix(START).removesuffix(END) + "\n"
          OUTPUT.write_text(msg)

      - name: Upload dist/ for the publish job and to debug unexpected changes
        # yamllint disable-line rule:line-length
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with: { name: dist, path: dist }
        if: always()
      - name: Upload wheelhouse/ to debug unexpected changes
        # yamllint disable-line rule:line-length
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with: { name: wheelhouse, path: wheelhouse }
        if: always()
      - uses: dprint/check@9cb3a2b17a8e606d37aae341e49df3654933fc23 # v2.3
  publish:
    needs: [nox]
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'workflow_dispatch' }}"
    permissions: { id-token: write }
    environment:
      name: pypi
      url: >-
        https://${{
          contains(github.event.inputs.repository-url, 'test') && 'test.' || ''
        }}pypi.org/project/reproducibly/${{
          needs.nox.outputs.version
        }}/
    steps:
      - name: Prevent deployments outside test from outside main
        run: "false"
        if: >-
          ${{ !( github.ref == 'refs/heads/main'
          || contains(github.event.inputs.repository-url, 'test')) }}
        # yamllint disable-line rule:line-length
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with: { name: dist, path: dist }
      - run: cd dist && sha256sum -c SHA256SUMS && rm SHA256SUMS
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          packages-dir: dist
          repository-url: ${{ github.event.inputs.repository-url }}
